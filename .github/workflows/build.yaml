name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval=30s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn pytest pytest-cov requests httpx

      - name: Run tests with coverage
        run: |
          pytest --cov=app --cov-report=xml

      - name: Install SonarScanner
        run: |
          curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/4.6.2.2472/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip -d sonar-scanner
          echo "${{ github.workspace }}/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin" >> $GITHUB_PATH

      - name: Wait for SonarQube to be ready
        run: |
          while ! curl -s http://localhost:9000/api/system/health | grep -q '"status":"UP"'; do
            echo "Waiting for SonarQube..."
            sleep 10
          done

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=demo-jazzx \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage report to SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -X POST -u $SONAR_TOKEN: \
            -F projectKey=demo-jazzx \
            -F file=@coverage.xml \
            http://localhost:9000/api/coverage/upload
